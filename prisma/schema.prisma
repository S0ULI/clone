// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Photo {
  width   String?
  height  String?
  url     String
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  password     String
  username     String?  @unique
  firstname    String?
  lastname     String?
  phoneNumber  String?
  avatar       Photo?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  cart        Cart?      // [User] one-to-one [Cart]
  orders      Order[]    // [Order] many-to-one [User]

  @@map("users")
}

model Cart {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  totalPrice Float

  userId     String     @unique @db.ObjectId
  user       User       @relation(fields: [userId], references: [id])  // [User] one-to-one [Cart]
  cartItems  CartItem[]                                                // [CartItem] one-to-many [Cart]

  @@map("carts")
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Int

  productId String   @unique @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  cartId    String   @db.ObjectId
  cart      Cart     @relation(fields: [cartId], references: [id])       // [CartItem] many-to-one [Cart]

   @@map("cart_items")
}

model Order {
   id         String      @id @default(auto()) @map("_id") @db.ObjectId
   createdAt  DateTime    @default(now())
   updatedAt  DateTime    @updatedAt
   totalPrice Float
   
   userId     String      @db.ObjectId
   user       User        @relation(fields: [userId], references: [id])
   orderItems OrderItem[]                                                  // [OrderItem] one-to-many [Order]

   @@map("orders")
}

model OrderItem {
   id        String     @id @default(auto()) @map("_id") @db.ObjectId
   createdAt DateTime   @default(now())
   updatedAt DateTime   @updatedAt
   quantity  Int

   productId String     @unique @db.ObjectId
   product   Product    @relation(fields: [productId], references: [id])
   orderId   String     @db.ObjectId 
   order     Order      @relation(fields: [orderId], references: [id])
   
   @@map("order_items")
}

model Product {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    slug        String
    title       String
    image       Photo
    description String
    price       Float
    rate        Float?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    cartItem    CartItem?
    orderItem   OrderItem?

    @@map("products")
}